{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/layout.js"],"names":["UsingTypescript","data","path","title","site","buildTime","href","to","query","HeaderContainer","styled","header","HeaderContent","div","HeaderRight","StyledLink","Link","Header","defaultProps","siteTitle","Footer","Date","getFullYear","target","rel","Layout","children","siteMetadata"],"mappings":"6FAAA,0GAyBeA,UAZyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,qBACX,sEACA,uEAA4C,wCAA5C,+DAAyH,2CAAzH,wEACA,uEAA4C,0CAA5C,oBAAgF,0CAAhF,gBAAgH,yCAAhH,UACA,6DAAkCD,EAAlC,wBAA6DD,EAAKG,KAAKC,UAAvE,KACA,8DAAmC,uBAAGC,KAAK,6CAAR,kCAAnC,KACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,6BAMG,IAAMC,EAAQ,c,wHCtBfC,EAAkBC,UAAOC,OAAV,0EAAGD,CAAH,mDAQfE,EAAgBF,UAAOG,IAAV,wEAAGH,CAAH,qPAyBbI,EAAcJ,UAAOG,IAAV,sEAAGH,CAAH,yIAeXK,EAAaL,kBAAOM,QAAV,qEAAGN,CAAH,uCAKVO,EAAS,kBACb,kBAACR,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,KACE,4BACE,kBAACC,EAAD,CAAYR,GAAG,KAAf,aAEF,4BACE,kBAACQ,EAAD,CAAYR,GAAG,aAAf,iBAWVU,EAAOC,aAAe,CACpBC,UAAU,IAGGF,QCnDAG,EA5BA,WACb,OACE,gCACE,gGAGA,6BAJF,MAIW,IAAIC,MAAOC,cAJtB,mBAME,uBAAGhB,KAAK,2BAA2BiB,OAAO,SAASC,IAAI,cAAvD,UAGA,6BATF,IAWE,qCACM,IACJ,uBACElB,KAAK,iDACLiB,OAAO,SACPC,IAAI,cAHN,qBAMK,IARP,mB,oBC2BSC,IA1BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVzB,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQkB,UAAWlB,EAAKG,KAAKuB,aAAaxB,QAC1C,6BACE,8BAAOuB,IAET,kBAAC,EAAD,S","file":"component---src-pages-using-typescript-tsx-78acf8ee95cb26fc795a.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.org/docs/typescript/\">documentation about TypeScript</a>.</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nconst HeaderContainer = styled.header`\n  width: 100%;\n  /* background-color: var(--dark); */\n  position: fixed;\n  top: 0;\n  z-index: 1240;\n`\n\nconst HeaderContent = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1.45rem 1.0875rem;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  > h1 {\n    margin-right: auto;\n  }\n\n  h5 {\n    margin: 0 1rem;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: center;\n    h1 {\n      margin: 0;\n    }\n  }\n`\n\nconst HeaderRight = styled.div`\n  display: flex;\n  height: 100%;\n  justify-content: space-between;\n  align-items: center;\n\n  h3 {\n    margin-bottom: 0;\n  }\n\n  *:not(:last-child) {\n    margin-right: 1em;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n`\n\nconst Header = () => (\n  <HeaderContainer>\n    <HeaderContent>\n      <HeaderRight>\n        <h3>\n          <StyledLink to=\"/\">About Me</StyledLink>\n        </h3>\n        <h3>\n          <StyledLink to=\"/projects\">Projects</StyledLink>\n        </h3>\n      </HeaderRight>\n    </HeaderContent>\n  </HeaderContainer>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\n\nconst Footer = () => {\n  return (\n    <footer>\n      <small>\n        I protecc, I attacc, but most importantly, I code with Reacc.\n      </small>\n      <br />Â© {new Date().getFullYear()}, Built with\n      {` `}\n      <a href=\"https://www.gatsbyjs.org\" target=\"_blank\" rel=\"noreferrer\">\n        Gatsby\n      </a>\n      <br />\n      {` `}\n      <small>\n        And{\" \"}\n        <a\n          href=\"https://github.com/ianteoyy/ianteoyy.github.io\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          here's the Github\n        </a>{\" \"}\n        for this page\n      </small>\n    </footer>\n  )\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./Footer\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div>\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}